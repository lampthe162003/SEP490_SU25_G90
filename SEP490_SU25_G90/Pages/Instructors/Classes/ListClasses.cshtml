@page
@model SEP490_SU25_G90.Pages.Instructors.Classes.ListClassesModel
@{
    ViewData["Title"] = "Danh sách lớp học";
    Layout = "~/Pages/Shared/_InstructorLayout.cshtml";
}

<div class="container-fluid">
    <!-- Header section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="fas fa-chalkboard-teacher me-2"></i>
            Danh sách lớp học
        </h2>
    </div>

    <!-- Search filters -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get">
                <div class="row g-3">
                    <!-- First row -->
                    <div class="col-md-4">
                        <label class="form-label">Tìm theo tên</label>
                        <input type="text" class="form-control" 
                               name="SearchRequest.ClassName" 
                               value="@Model.SearchRequest.ClassName"
                               placeholder="Nhập tên lớp học..." />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Loại bằng</label>
                        <select class="form-select" name="SearchRequest.LicenceTypeId">
                            @foreach (var item in Model.LicenceTypes)
                            {
                                <option value="@item.Value" selected="@(item.Value == Model.SearchRequest.LicenceTypeId?.ToString())">
                                    @item.Text
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Trạng thái</label>
                        <select class="form-select" name="SearchRequest.Status">
                            @foreach (var item in Model.StatusOptions)
                            {
                                <option value="@item.Value" selected="@(item.Value == Model.SearchRequest.Status)">
                                    @item.Text
                                </option>
                            }
                        </select>
                    </div>
                </div>
                
                <div class="row g-3 mt-2">
                    <!-- Second row -->
                    <div class="col-md-3">
                        <label class="form-label">Bắt đầu</label>
                        <input type="date" class="form-control" 
                               name="SearchRequest.StartDate" 
                               value="@(Model.SearchRequest.StartDate?.ToString("yyyy-MM-dd"))" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Kết thúc</label>
                        <input type="date" class="form-control" 
                               name="SearchRequest.EndDate" 
                               value="@(Model.SearchRequest.EndDate?.ToString("yyyy-MM-dd"))" />
                    </div>
                    <div class="col-md-6 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary me-2" onclick="document.querySelector('input[name=&quot;SearchRequest.PageNumber&quot;]').value = 1;">
                            <i class="fas fa-search me-2"></i>
                            Tìm kiếm
                        </button>
                        <a href="@Model.CreateResetUrl()" class="btn btn-secondary">
                            <i class="fas fa-undo me-2"></i>
                            Đặt lại
                        </a>
                    </div>
                </div>
                <!-- Hidden field để duy trì page number khi cần -->
                <input type="hidden" name="SearchRequest.PageNumber" value="@Model.SearchRequest.PageNumber" />
                <input type="hidden" name="SearchRequest.PageSize" value="@Model.SearchRequest.PageSize" />
            </form>
        </div>
    </div>

    <!-- Results section -->
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <div>@error.ErrorMessage</div>
            }
        </div>
    }

    <!-- Search results info -->
    @if (Model.HasSearchParameters())
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i>
            <strong>Kết quả tìm kiếm:</strong> 
            Tìm thấy @Model.Classes.Total lớp học
            @if (!string.IsNullOrEmpty(Model.SearchRequest.ClassName))
            {
                <span> có tên chứa "<strong>@Model.SearchRequest.ClassName</strong>"</span>
            }
            @if (Model.SearchRequest.LicenceTypeId.HasValue)
            {
                <span> loại bằng "<strong>@Model.LicenceTypes.FirstOrDefault(x => x.Value == Model.SearchRequest.LicenceTypeId.ToString())?.Text</strong>"</span>
            }
            @if (!string.IsNullOrEmpty(Model.SearchRequest.Status))
            {
                <span> trạng thái "<strong>@Model.SearchRequest.Status</strong>"</span>
            }
        </div>
    }

    <!-- Data table -->
    <div class="card">
        <div class="card-body">
            @if (Model.Classes.Data.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th scope="col" style="width: 5%;">STT</th>
                                <th scope="col" style="width: 15%;">Tên lớp</th>
                                <th scope="col" style="width: 20%;">Giáo viên</th>
                                <th scope="col" style="width: 10%;">Loại bằng</th>
                                <th scope="col" style="width: 12%;">Bắt đầu</th>
                                <th scope="col" style="width: 12%;">Kết thúc</th>
                                <th scope="col" style="width: 12%;">Trạng thái</th>
                                <th scope="col" style="width: 10%;">SL học viên</th>
                                <th scope="col" style="width: 4%;">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int startIndex = (Model.SearchRequest.PageNumber - 1) * Model.SearchRequest.PageSize;
                            }
                            @foreach (var item in Model.Classes.Data.Select((value, index) => new { value, index }))
                            {
                                <tr>
                                    <td>@(startIndex + item.index + 1)</td>
                                    <td class="fw-bold">@item.value.ClassName</td>
                                    <td>@item.value.InstructorName</td>
                                    <td>
                                        <span class="badge bg-info">@item.value.LicenceCode</span>
                                    </td>
                                    <td>@item.value.StartDate?.ToString("dd/MM/yyyy")</td>
                                    <td>@item.value.EndDate?.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        @{
                                            string badgeClass = item.value.Status switch
                                            {
                                                "Chưa bắt đầu" => "bg-warning text-dark",
                                                "Đang học" => "bg-success",
                                                "Đã học xong" => "bg-secondary",
                                                _ => "bg-light text-dark"
                                            };
                                        }
                                        <span class="badge @badgeClass">@item.value.Status</span>
                                    </td>
                                    <td class="text-center">
                                        <span class="badge bg-primary">@item.value.TotalStudents</span>
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <a href="/Instructors/Classes/ClassDetails?id=@item.value.ClassId"
                                               class="btn btn-sm btn-outline-primary" 
                                               title="Xem chi tiết">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.Classes.TotalPage > 1)
                {
                    <nav aria-label="Phân trang" class="mt-4">
                        <ul class="pagination justify-content-center">
                            <!-- Previous button -->
                            <li class="page-item @(Model.SearchRequest.PageNumber == 1 ? "disabled" : "")">
                                <a class="page-link" href="@Model.CreatePagingUrl(Model.SearchRequest.PageNumber - 1)">
                                    <i class="fas fa-chevron-left"></i>
                                    Trước
                                </a>
                            </li>

                            @{
                                int startPage = Math.Max(1, Model.SearchRequest.PageNumber - 2);
                                int endPage = Math.Min(Model.Classes.TotalPage, Model.SearchRequest.PageNumber + 2);
                            }

                            <!-- First page -->
                            @if (startPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Model.CreatePagingUrl(1)">1</a>
                                </li>
                                @if (startPage > 2)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                            }

                            <!-- Page numbers -->
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.SearchRequest.PageNumber ? "active" : "")">
                                    <a class="page-link" href="@Model.CreatePagingUrl(i)">@i</a>
                                </li>
                            }

                            <!-- Last page -->
                            @if (endPage < Model.Classes.TotalPage)
                            {
                                @if (endPage < Model.Classes.TotalPage - 1)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                                <li class="page-item">
                                    <a class="page-link" href="@Model.CreatePagingUrl(Model.Classes.TotalPage)">@Model.Classes.TotalPage</a>
                                </li>
                            }

                            <!-- Next button -->
                            <li class="page-item @(Model.SearchRequest.PageNumber == Model.Classes.TotalPage ? "disabled" : "")">
                                <a class="page-link" href="@Model.CreatePagingUrl(Model.SearchRequest.PageNumber + 1)">
                                    Sau
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }

                <!-- Results info -->
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <small class="text-muted">
                        Hiển thị @((Model.SearchRequest.PageNumber - 1) * Model.SearchRequest.PageSize + 1) 
                        đến @(Math.Min(Model.SearchRequest.PageNumber * Model.SearchRequest.PageSize, Model.Classes.Total)) 
                        trong tổng số @Model.Classes.Total kết quả
                    </small>
                    <small class="text-muted">
                        Trang @Model.SearchRequest.PageNumber / @Model.Classes.TotalPage
                    </small>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-search fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Không tìm thấy lớp học nào</h5>
                    <p class="text-muted">Vui lòng thử lại với điều kiện tìm kiếm khác hoặc tạo lớp học mới.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-submit form when dropdown values change
            $('select[name="SearchRequest.LicenceTypeId"], select[name="SearchRequest.Status"]').change(function() {
                // Reset to page 1 when search criteria changes
                $('input[name="SearchRequest.PageNumber"]').val(1);
                $(this).closest('form').submit();
            });

            // Submit form when Enter is pressed in text inputs
            $('input[type="text"], input[type="date"]').keypress(function(e) {
                if (e.which == 13) { // Enter key
                    $('input[name="SearchRequest.PageNumber"]').val(1);
                    $(this).closest('form').submit();
                    return false;
                }
            });

            // Clear form validation errors when user starts typing
            $('input, select').on('input change', function() {
                $('.alert-danger').fadeOut();
            });

            // Show loading indicator when form is submitted
            $('form').submit(function() {
                var submitBtn = $(this).find('button[type="submit"]');
                var originalText = submitBtn.html();
                submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Đang tìm kiếm...');
                submitBtn.prop('disabled', true);
                
                // Re-enable after 3 seconds if still processing
                setTimeout(function() {
                    submitBtn.html(originalText);
                    submitBtn.prop('disabled', false);
                }, 3000);
            });
        });
    </script>
}
