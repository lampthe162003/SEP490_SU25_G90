@page "/Admins/TestApplicant/List"
@model SEP490_SU25_G90.Pages.Admins.TestApplicant.TestApplicantListModel

@{
    ViewData["Title"] = "Test Applicants";
}

<h1 class="mb-4 text-primary fw-bold">Test Applicants</h1>

<p>
    <a asp-page="Create" class="btn btn-success shadow-sm">
        <i class="bi bi-plus-circle me-2"></i> Create New
    </a>
</p>

<div class="table-responsive shadow-sm rounded" style="background: #fff;">
    <table class="table align-middle mb-0" style="min-width: 700px;">
        <thead class="table-light border-bottom border-2">
            <tr>
                <th scope="col" class="text-center" style="width: 60px;">ID</th>
                <th scope="col" class="text-start" style="width: 200px;">Họ Tên</th>
                <th scope="col" class="text-center" style="width: 150px;">Loại Bằng</th>
                <th scope="col" class="text-center" style="width: 150px;">Ngày thi</th>
                <th scope="col" class="text-center" style="width: 120px;">Điểm thi</th>
                <th scope="col" class="text-center" style="width: 120px;">Kết quả</th>
            </tr>
        </thead>

        <tbody>
            <script>
                async function loadApplicants() {
                    const response = await fetch("/api/TestApplicants");
                    const data = await response.json();

                    const tbody = document.querySelector("tbody");
                    tbody.innerHTML = "";

                    data.forEach(item => {
                        tbody.innerHTML += `
                            <tr class="border-bottom">
                                <td class="text-center">${item.testId}</td>
                                <td class="text-start">${item.learnerFullName}</td>
                                <td class="text-center">${item.licenceType}</td>
                                <td class="text-center">${formatDate(item.examDate)}</td>
                                <td class="text-center text-success fw-bold">${item.score?.toFixed(1) ?? 'N/A'}</td>
                                <td class="text-center"><span class="badge ${getBadgeClass(item.statusText)}">${item.statusText}</span></td>
                            </tr>
                        `;
                    });
                }

                function formatDate(dateStr) {
                    if (!dateStr) return "N/A";
                    const d = new Date(dateStr);
                    return d.toLocaleDateString("vi-VN");
                }

                function getBadgeClass(status) {
                    return status === "Đạt" ? "bg-success"
                         : status === "Trượt" ? "bg-danger"
                         : "bg-secondary";
                }

                window.onload = loadApplicants;
            </script>

        </tbody>
    </table>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Đạt" => "bg-success",
            "Trượt" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
