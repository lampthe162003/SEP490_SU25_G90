@page
@model SEP490_SU25_G90.Pages.HumanResources.User.UpdateInstructorModel
@{
    ViewData["Title"] = "Cập nhật thông tin Giảng viên";
    Layout = "~/Pages/Shared/_HumanResourcesLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="h3 mb-0">
                    <i class="fas fa-user-edit text-primary me-2"></i>
                    Cập nhật thông tin Giảng viên
                </h2>
                <div>
                    <a asp-page="./ManagerInstructor" class="btn btn-secondary me-2">
                        <i class="fas fa-arrow-left me-2"></i>
                        Quay trở lại
                    </a>
                </div>
            </div>

            <!-- Alert Messages -->
            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="alert alert-@(Model.MessageType == "success" ? "success" : "danger") alert-dismissible fade show" role="alert">
                    <i class="fas fa-@(Model.MessageType == "success" ? "check-circle" : "exclamation-triangle") me-2"></i>
                    @Model.Message
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Update Form -->
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-edit me-2"></i>
                        Thông tin Giảng viên
                    </h5>
                </div>
                <div class="card-body">
                    <form method="post" enctype="multipart/form-data">
                        <input type="hidden" asp-for="UpdateRequest.UserId" />
                        
                        <div class="row">
                            <!-- Basic Information -->
                            <div class="col-md-6">
                                <h6 class="text-primary mb-3">
                                    <i class="fas fa-user me-2"></i>
                                    Thông tin cơ bản
                                </h6>

                                <!-- Profile Image Section -->
                                <div class="mb-3">
                                    <label class="form-label">
                                        <i class="fas fa-user-circle me-1"></i>
                                        Ảnh đại diện
                                    </label>
                                    
                                    @if (!string.IsNullOrEmpty(Model.UpdateRequest.ProfileImageUrl))
                                    {
                                        <div class="mb-2">
                                            <small class="text-success">
                                                <i class="fas fa-check me-1"></i>
                                                Đã có ảnh - 
                                                <button type="button" class="btn btn-link btn-sm p-0 text-decoration-none" 
                                                        onclick="showImageModal('@Model.UpdateRequest.ProfileImageUrl', 'Ảnh đại diện')">
                                                    <i class="fas fa-eye me-1"></i>Xem ảnh hiện tại
                                                </button>
                                            </small>
                                        </div>
                                    }
                                    
                                    <input asp-for="UpdateRequest.ProfileImageFile" class="form-control" type="file" accept="image/*" />
                                    <span asp-validation-for="UpdateRequest.ProfileImageFile" class="text-danger"></span>
                                    <div class="profile-image-preview mt-2" style="display: none;">
                                        <div class="position-relative d-inline-block preview-container">
                                            <img class="img-thumbnail preview-image" style="max-width: 150px; max-height: 150px; cursor: pointer;" 
                                                 onclick="showImageModalFromPreview(this, 'Ảnh đại diện mới')" />
                                            <div class="position-absolute top-0 start-0 w-100 h-100 preview-overlay d-flex align-items-center justify-content-center" 
                                                 style="background: rgba(0,0,0,0.7); opacity: 0; transition: opacity 0.3s;">
                                                <i class="fas fa-expand text-white fa-2x"></i>
                                            </div>
                                        </div>
                                        <div class="mt-1">
                                            <small class="text-muted">Preview ảnh đại diện mới</small>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.Email" class="form-label">Email</label>
                                    <input asp-for="UpdateRequest.Email" class="form-control" readonly style="background-color: #f8f9fa;" />
                                    <span asp-validation-for="UpdateRequest.Email" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.FirstName" class="form-label">Họ *</label>
                                    <input asp-for="UpdateRequest.FirstName" class="form-control" maxlength="50" />
                                    <span asp-validation-for="UpdateRequest.FirstName" class="text-danger"></span>
                                    <small class="text-muted">
                                        <i class="fas fa-info-circle me-1"></i>
                                        Chỉ được chứa chữ cái, không có số hoặc khoảng trắng
                                    </small>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.MiddleName" class="form-label">Tên đệm</label>
                                    <input asp-for="UpdateRequest.MiddleName" class="form-control" maxlength="50" />
                                    <span asp-validation-for="UpdateRequest.MiddleName" class="text-danger"></span>
                                    <small class="text-muted">
                                        <i class="fas fa-info-circle me-1"></i>
                                        Chỉ được chứa chữ cái, không có số hoặc khoảng trắng
                                    </small>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.LastName" class="form-label">Tên *</label>
                                    <input asp-for="UpdateRequest.LastName" class="form-control" maxlength="50" />
                                    <span asp-validation-for="UpdateRequest.LastName" class="text-danger"></span>
                                    <small class="text-muted">
                                        <i class="fas fa-info-circle me-1"></i>
                                        Chỉ được chứa chữ cái, không có số hoặc khoảng trắng
                                    </small>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.Phone" class="form-label">Số điện thoại</label>
                                    <input asp-for="UpdateRequest.Phone" class="form-control" />
                                    <span asp-validation-for="UpdateRequest.Phone" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.Dob" class="form-label">Ngày sinh</label>
                                    <input asp-for="UpdateRequest.Dob" type="date" class="form-control" />
                                    <span asp-validation-for="UpdateRequest.Dob" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.Gender" class="form-label">Giới tính</label>
                                    <select asp-for="UpdateRequest.Gender" class="form-select">
                                        <option value="">-- Chọn giới tính --</option>
                                        <option value="true">Nam</option>
                                        <option value="false">Nữ</option>
                                    </select>
                                    <span asp-validation-for="UpdateRequest.Gender" class="text-danger"></span>
                                </div>

                                <h6 class="text-success mb-3 mt-4">
                                    <i class="fas fa-map-marker-alt me-2"></i>
                                    Địa chỉ
                                </h6>

                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label asp-for="UpdateRequest.CityId" class="form-label">Tỉnh/Thành phố *</label>
                                            <select asp-for="UpdateRequest.CityId" class="form-select" id="citySelect" required>
                                                <option value="">-- Chọn tỉnh/thành phố --</option>
                                                @foreach (var city in Model.AvailableCities)
                                                {
                                                    <option value="@city.CityId" selected="@(city.CityId == Model.UpdateRequest.CityId)">@city.CityName</option>
                                                }
                                            </select>
                                            <span asp-validation-for="UpdateRequest.CityId" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label asp-for="UpdateRequest.ProvinceId" class="form-label">Quận/Huyện *</label>
                                            <select asp-for="UpdateRequest.ProvinceId" class="form-select" id="provinceSelect" required>
                                                <option value="">-- Chọn quận/huyện --</option>
                                                @foreach (var province in Model.AvailableProvinces)
                                                {
                                                    <option value="@province.ProvinceId" selected="@(province.ProvinceId == Model.UpdateRequest.ProvinceId)">@province.ProvinceName</option>
                                                }
                                            </select>
                                            <span asp-validation-for="UpdateRequest.ProvinceId" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label asp-for="UpdateRequest.WardId" class="form-label">Phường/Xã *</label>
                                            <select asp-for="UpdateRequest.WardId" class="form-select" id="wardSelect" required>
                                                <option value="">-- Chọn phường/xã --</option>
                                                @foreach (var ward in Model.AvailableWards)
                                                {
                                                    <option value="@ward.WardId" selected="@(ward.WardId == Model.UpdateRequest.WardId)">@ward.WardName</option>
                                                }
                                            </select>
                                            <span asp-validation-for="UpdateRequest.WardId" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.HouseNumber" class="form-label">Số nhà</label>
                                    <input asp-for="UpdateRequest.HouseNumber" class="form-control" placeholder="Ví dụ: 123, 45A" />
                                    <span asp-validation-for="UpdateRequest.HouseNumber" class="text-danger"></span>
                                </div>

                                <h6 class="text-info mb-3 mt-4">
                                    <i class="fas fa-id-card me-2"></i>
                                    Thông tin CCCD
                                </h6>

                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.CccdNumber" class="form-label">
                                        Số CCCD 
                                        <small class="text-muted">(12 chữ số)</small>
                                    </label>
                                    <input asp-for="UpdateRequest.CccdNumber" class="form-control" placeholder="Nhập 12 chữ số CCCD" maxlength="12" />
                                    <span asp-validation-for="UpdateRequest.CccdNumber" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.CccdImageFront" class="form-label">
                                        <i class="fas fa-image me-1"></i>
                                        Ảnh CCCD mặt trước
                                    </label>
                                    
                                    @if (!string.IsNullOrEmpty(Model.UpdateRequest.CccdImageFront))
                                    {
                                        <div class="mb-2">
                                            <small class="text-success">
                                                <i class="fas fa-check me-1"></i>
                                                Đã có ảnh - 
                                                <button type="button" class="btn btn-link btn-sm p-0 text-decoration-none" 
                                                        onclick="showImageModal('@Model.UpdateRequest.CccdImageFront', 'Ảnh CCCD mặt trước')">
                                                    <i class="fas fa-eye me-1"></i>Xem ảnh hiện tại
                                                </button>
                                            </small>
                                        </div>
                                    }
                                    
                                    <input asp-for="UpdateRequest.CccdImageFrontFile" class="form-control" type="file" accept="image/*" />
                                    <span asp-validation-for="UpdateRequest.CccdImageFrontFile" class="text-danger"></span>
                                    <div class="image-preview-front mt-2" style="display: none;">
                                        <div class="position-relative d-inline-block preview-container">
                                            <img class="img-thumbnail preview-image" style="max-width: 200px; max-height: 120px; cursor: pointer;" 
                                                 onclick="showImageModalFromPreview(this, 'Ảnh CCCD mặt trước mới')" />
                                            <div class="position-absolute top-0 start-0 w-100 h-100 preview-overlay d-flex align-items-center justify-content-center" 
                                                 style="background: rgba(0,0,0,0.7); opacity: 0; transition: opacity 0.3s;">
                                                <i class="fas fa-expand text-white fa-2x"></i>
                                            </div>
                                        </div>
                                        <div class="mt-1">
                                            <small class="text-muted">
                                                Preview ảnh mặt trước mới
                                            </small>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="UpdateRequest.CccdImageBack" class="form-label">
                                        <i class="fas fa-image me-1"></i>
                                        Ảnh CCCD mặt sau
                                    </label>
                                    
                                    @if (!string.IsNullOrEmpty(Model.UpdateRequest.CccdImageBack))
                                    {
                                        <div class="mb-2">
                                            <small class="text-success">
                                                <i class="fas fa-check me-1"></i>
                                                Đã có ảnh - 
                                                <button type="button" class="btn btn-link btn-sm p-0 text-decoration-none" 
                                                        onclick="showImageModal('@Model.UpdateRequest.CccdImageBack', 'Ảnh CCCD mặt sau')">
                                                    <i class="fas fa-eye me-1"></i>Xem ảnh hiện tại
                                                </button>
                                            </small>
                                        </div>
                                    }
                                    
                                    <input asp-for="UpdateRequest.CccdImageBackFile" class="form-control" type="file" accept="image/*" />
                                    <span asp-validation-for="UpdateRequest.CccdImageBackFile" class="text-danger"></span>
                                    <div class="image-preview-back mt-2" style="display: none;">
                                        <div class="position-relative d-inline-block preview-container">
                                            <img class="img-thumbnail preview-image" style="max-width: 200px; max-height: 120px; cursor: pointer;" 
                                                 onclick="showImageModalFromPreview(this, 'Ảnh CCCD mặt sau mới')" />
                                            <div class="position-absolute top-0 start-0 w-100 h-100 preview-overlay d-flex align-items-center justify-content-center" 
                                                 style="background: rgba(0,0,0,0.7); opacity: 0; transition: opacity 0.3s;">
                                                <i class="fas fa-expand text-white fa-2x"></i>
                                            </div>
                                        </div>
                                        <div class="mt-1">
                                            <small class="text-muted">
                                                Preview ảnh mặt sau mới
                                            </small>
                                        </div>
                                    </div>
                                </div>

                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    <strong>Lưu ý:</strong> 
                                    <ul class="mb-0 mt-2">
                                        <li>Để trống các trường không muốn thay đổi</li>
                                        <li>Chọn file ảnh để thay đổi ảnh hiện tại (jpg, png, jpeg, gif)</li>
                                        <li>Kích thước file ảnh không được vượt quá 5MB</li>
                                        <li>Click vào preview ảnh hoặc "Xem ảnh hiện tại" để xem ảnh lớn</li>
                                        <li>Có thể mở ảnh trong tab mới từ modal nếu cần</li>
                                    </ul>
                                </div>
                            </div>

                            <!-- Specializations -->
                            <div class="col-md-6">
                                <h6 class="text-primary mb-3">
                                    <i class="fas fa-certificate me-2"></i>
                                    Chuyên môn giảng dạy
                                </h6>
                                
                                <div class="mb-3">
                                    <label class="form-label">Loại bằng lái có thể dạy</label>
                                    <div class="border rounded p-3" style="max-height: 300px; overflow-y: auto;">
                                        @foreach (var licenceType in Model.AvailableLicenceTypes)
                                        {
                                            <div class="form-check mb-2">
                                                <input class="form-check-input" type="checkbox" 
                                                       name="UpdateRequest.SelectedSpecializations" 
                                                       value="@licenceType.LicenceTypeId"
                                                       id="licence_@licenceType.LicenceTypeId"
                                                       @(Model.UpdateRequest.SelectedSpecializations.Contains(licenceType.LicenceTypeId) ? "checked" : "") />
                                                <label class="form-check-label" for="licence_@licenceType.LicenceTypeId">
                                                    <span class="badge bg-primary me-2">@licenceType.LicenceCode</span>
                                                    Bằng lái @licenceType.LicenceCode
                                                </label>
                                            </div>
                                        }
                                    </div>
                                    <small class="text-muted">
                                        <i class="fas fa-info-circle me-1"></i>
                                        Chọn các loại bằng lái mà giảng viên có thể giảng dạy
                                    </small>
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="row mt-4">
                            <div class="col-12">
                                <div class="d-flex justify-content-end">
                                    <a asp-page="./ManagerInstructor" class="btn btn-secondary me-3">
                                        <i class="fas fa-times me-2"></i>
                                        Quay trở lại
                                    </a>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save me-2"></i>
                                        Xác nhận
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Image Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">
                    <i class="fas fa-image me-2"></i>
                    <span id="imageModalTitle">Xem ảnh</span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <div id="imageLoading" class="d-none">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                    <p class="mt-2 text-muted">Đang tải ảnh...</p>
                </div>
                <div id="imageError" class="d-none alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Không thể tải ảnh. Vui lòng kiểm tra URL.
                </div>
                <img id="modalImage" class="img-fluid rounded shadow" style="max-height: 70vh;" alt="CCCD Image" />
            </div>
            <div class="modal-footer">
                <a id="openInNewTab" href="#" target="_blank" class="btn btn-outline-primary">
                    <i class="fas fa-external-link-alt me-2"></i>
                    Mở trong tab mới
                </a>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>
                    Đóng
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // CCCD input validation - only allow numbers
        document.addEventListener('DOMContentLoaded', function() {
            setupAddressCascadingDropdowns();
            
            // Name fields validation - only letters, no numbers, no spaces
            const updateFirstNameInput = document.querySelector('input[name="UpdateRequest.FirstName"]');
            const updateMiddleNameInput = document.querySelector('input[name="UpdateRequest.MiddleName"]');
            const updateLastNameInput = document.querySelector('input[name="UpdateRequest.LastName"]');

            if (updateFirstNameInput) {
                updateFirstNameInput.addEventListener('input', function(e) {
                    validateNameField(e.target, 'update-first-name-error', 'Họ');
                });
                
                updateFirstNameInput.addEventListener('keypress', function(e) {
                    if (!/^[\p{L}]$/u.test(e.key) && !['Backspace', 'Delete', 'Tab', 'Escape', 'Enter', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {
                        e.preventDefault();
                    }
                });
            }

            if (updateMiddleNameInput) {
                updateMiddleNameInput.addEventListener('input', function(e) {
                    validateMiddleNameField(e.target, 'update-middle-name-error', 'Tên đệm');
                });
                
                updateMiddleNameInput.addEventListener('keypress', function(e) {
                   // Allow letters and single spaces
                    if (!/^[\p{L}\s]$/u.test(e.key) && !['Backspace', 'Delete', 'Tab', 'Escape', 'Enter', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {
                        e.preventDefault();
                    }
                    // Prevent consecutive spaces
                    if (e.key === ' ' && e.target.value.endsWith(' ')) {
                        e.preventDefault();
                    }
                });
            }

            if (updateLastNameInput) {
                updateLastNameInput.addEventListener('input', function(e) {
                    validateNameField(e.target, 'update-last-name-error', 'Tên');
                });
                
                updateLastNameInput.addEventListener('keypress', function(e) {
                    if (!/^[\p{L}]$/u.test(e.key) && !['Backspace', 'Delete', 'Tab', 'Escape', 'Enter', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {
                        e.preventDefault();
                    }
                });
            }
            
            const cccdInput = document.querySelector('input[name="UpdateRequest.CccdNumber"]');
            if (cccdInput) {
                cccdInput.addEventListener('input', function(e) {
                    // Remove any non-digit characters
                    e.target.value = e.target.value.replace(/[^\d]/g, '');
                    
                    // Limit to 12 digits
                    if (e.target.value.length > 12) {
                        e.target.value = e.target.value.substring(0, 12);
                    }
                });

                cccdInput.addEventListener('keypress', function(e) {
                    // Only allow numbers
                    if (!/^\d$/.test(e.key) && !['Backspace', 'Delete', 'Tab', 'Escape', 'Enter', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {
                        e.preventDefault();
                    }
                });
            }

            // File upload preview for all image inputs
            const profileImageInput = document.querySelector('input[name="UpdateRequest.ProfileImageFile"]');
            const frontImageInput = document.querySelector('input[name="UpdateRequest.CccdImageFrontFile"]');
            const backImageInput = document.querySelector('input[name="UpdateRequest.CccdImageBackFile"]');

            if (profileImageInput) {
                profileImageInput.addEventListener('change', function(e) {
                    handleFilePreview(e.target, 'profile');
                });
            }

            if (frontImageInput) {
                frontImageInput.addEventListener('change', function(e) {
                    handleFilePreview(e.target, 'front');
                });
            }

            if (backImageInput) {
                backImageInput.addEventListener('change', function(e) {
                    handleFilePreview(e.target, 'back');
                });
            }

            function handleFilePreview(input, type) {
                const previewDiv = document.querySelector(`.${type === 'profile' ? 'profile-image-preview' : `image-preview-${type}`}`);
                const previewImg = previewDiv ? previewDiv.querySelector('img') : null;
                
                if (input.files && input.files[0]) {
                    const file = input.files[0];
                    
                    // Validate file type
                    if (!file.type.startsWith('image/')) {
                        input.classList.add('is-invalid');
                        showFileError(input, 'Vui lòng chọn file ảnh hợp lệ');
                        hideImagePreview(previewDiv);
                        return;
                    }
                    
                    // Validate file size (max 5MB)
                    if (file.size > 5 * 1024 * 1024) {
                        input.classList.add('is-invalid');
                        showFileError(input, 'Kích thước file không được quá 5MB');
                        hideImagePreview(previewDiv);
                        return;
                    }
                    
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                    hideFileError(input);
                    
                    // Create preview
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        if (previewImg) {
                            previewImg.src = e.target.result;
                            previewDiv.style.display = 'block';
                        }
                    };
                    reader.readAsDataURL(file);
                } else {
                    input.classList.remove('is-invalid', 'is-valid');
                    hideFileError(input);
                    hideImagePreview(previewDiv);
                }
            }

            function hideImagePreview(previewDiv) {
                if (previewDiv) {
                    previewDiv.style.display = 'none';
                }
            }

            function showFileError(input, message) {
                let errorDiv = input.parentNode.querySelector('.file-error');
                if (!errorDiv) {
                    errorDiv = document.createElement('div');
                    errorDiv.className = 'file-error text-danger small mt-1';
                    input.parentNode.appendChild(errorDiv);
                }
                errorDiv.innerHTML = '<i class="fas fa-exclamation-triangle me-1"></i>' + message;
            }

            function hideFileError(input) {
                const errorDiv = input.parentNode.querySelector('.file-error');
                if (errorDiv) {
                    errorDiv.remove();
                }
            }
         });
         function validateMiddleNameField(input, errorId, fieldName) {
            const value = input.value.trim();
            // Allow letters and single spaces, no consecutive spaces
            const isValid = /^[\p{L}]+(\s[\p{L}]+)*$/u.test(value) && value.length <= 50;

            if (isValid || value === '') {
                input.classList.remove('is-invalid');
                input.classList.add('is-valid');
                hideValidationError(input, errorId);
            } else {
                input.classList.remove('is-valid');
                input.classList.add('is-invalid');
                if (value.includes('  ')) {
                    showValidationError(input, errorId, `${fieldName} không được có khoảng trắng kép`);
                } else if (!/^[\p{L}\s]*$/u.test(value)) {
                    showValidationError(input, errorId, `${fieldName} chỉ được chứa chữ cái và khoảng trắng đơn (không có số)`);
                } else if (value.length > 50) {
                    showValidationError(input, errorId, `${fieldName} không được quá 50 ký tự`);
                } else {
                    showValidationError(input, errorId, `${fieldName} không hợp lệ`);
                }
            }
        }

        // Image Modal Functions
        function showImageModal(imageUrl, title) {
            const modal = new bootstrap.Modal(document.getElementById('imageModal'));
            const modalImage = document.getElementById('modalImage');
            const modalTitle = document.getElementById('imageModalTitle');
            const imageLoading = document.getElementById('imageLoading');
            const imageError = document.getElementById('imageError');
            const openInNewTab = document.getElementById('openInNewTab');

            // Set title
            modalTitle.textContent = title;
            
            // Set up "Open in new tab" link
            openInNewTab.href = imageUrl;

            // Reset states
            modalImage.style.display = 'none';
            imageError.classList.add('d-none');
            imageLoading.classList.remove('d-none');

                         // Show modal
             modal.show();

             // Focus modal for keyboard accessibility
             setTimeout(() => {
                 document.getElementById('imageModal').focus();
             }, 300);

                         // Load image
             const img = new Image();
             img.onload = function() {
                 imageLoading.classList.add('d-none');
                 modalImage.src = imageUrl;
                 modalImage.style.display = 'block';
             };
             img.onerror = function() {
                 imageLoading.classList.add('d-none');
                 imageError.classList.remove('d-none');
             };
             img.src = imageUrl;

             // Add keyboard support (ESC to close)
             const modalElement = document.getElementById('imageModal');
             modalElement.addEventListener('keydown', function(e) {
                 if (e.key === 'Escape') {
                     modal.hide();
                 }
             });
         }

         // Show modal from preview image
         function showImageModalFromPreview(imgElement, title) {
             showImageModal(imgElement.src, title);
         }

        // Address cascading dropdowns functionality
        function setupAddressCascadingDropdowns() {
            const citySelect = document.getElementById('citySelect');
            const provinceSelect = document.getElementById('provinceSelect');
            const wardSelect = document.getElementById('wardSelect');

            // City change event
            citySelect.addEventListener('change', function() {
                const cityId = this.value;
                if (cityId) {
                    loadProvinces(cityId);
                } else {
                    resetSelect(provinceSelect, '-- Chọn quận/huyện --');
                    resetSelect(wardSelect, '-- Chọn phường/xã --');
                    provinceSelect.disabled = true;
                    wardSelect.disabled = true;
                }
            });

            // Province change event
            provinceSelect.addEventListener('change', function() {
                const provinceId = this.value;
                if (provinceId) {
                    loadWards(provinceId);
                } else {
                    resetSelect(wardSelect, '-- Chọn phường/xã --');
                    wardSelect.disabled = true;
                }
            });
        }

        function loadProvinces(cityId) {
            showLoading(document.getElementById('provinceSelect'));
            
            fetch(`?handler=Provinces&cityId=${cityId}`)
                .then(response => response.json())
                .then(data => {
                    const provinceSelect = document.getElementById('provinceSelect');
                    resetSelect(provinceSelect, '-- Chọn quận/huyện --');
                    
                    data.forEach(province => {
                        const option = document.createElement('option');
                        option.value = province.provinceId;
                        option.textContent = province.provinceName;
                        provinceSelect.appendChild(option);
                    });
                    
                    provinceSelect.disabled = false;
                    resetSelect(document.getElementById('wardSelect'), '-- Chọn phường/xã --');
                    document.getElementById('wardSelect').disabled = true;
                })
                .catch(error => {
                    console.error('Error loading provinces:', error);
                    showError('Không thể tải danh sách quận/huyện');
                });
        }

        function loadWards(provinceId) {
            showLoading(document.getElementById('wardSelect'));
            
            fetch(`?handler=Wards&provinceId=${provinceId}`)
                .then(response => response.json())
                .then(data => {
                    const wardSelect = document.getElementById('wardSelect');
                    resetSelect(wardSelect, '-- Chọn phường/xã --');
                    
                    data.forEach(ward => {
                        const option = document.createElement('option');
                        option.value = ward.wardId;
                        option.textContent = ward.wardName;
                        wardSelect.appendChild(option);
                    });
                    
                    wardSelect.disabled = false;
                })
                .catch(error => {
                    console.error('Error loading wards:', error);
                    showError('Không thể tải danh sách phường/xã');
                });
        }


        function resetSelect(selectElement, defaultText) {
            selectElement.innerHTML = `<option value="">${defaultText}</option>`;
        }

        function showLoading(selectElement) {
            selectElement.innerHTML = '<option value="">Đang tải...</option>';
        }

        function showError(message) {
            // You can customize this to show error messages in your preferred way
            console.error(message);
        }

        function validateNameField(input, errorId, fieldName) {
            const value = input.value.trim();
            const isValid = /^[\p{L}]*$/u.test(value) && value.length <= 50;
            
            if (isValid || value === '') {
                input.classList.remove('is-invalid');
                input.classList.add('is-valid');
                hideValidationError(input, errorId);
            } else {
                input.classList.remove('is-valid');
                input.classList.add('is-invalid');
                if (!/^[\p{L}]*$/u.test(value)) {
                    showValidationError(input, errorId, `${fieldName} chỉ được chứa chữ cái và không được có khoảng trắng hoặc số`);
                } else if (value.length > 50) {
                    showValidationError(input, errorId, `${fieldName} không được quá 50 ký tự`);
                }
            }
        }
        
        function showValidationError(input, errorId, message) {
            let errorDiv = document.getElementById(errorId);
            if (!errorDiv) {
                errorDiv = document.createElement('div');
                errorDiv.id = errorId;
                errorDiv.className = 'invalid-feedback d-block';
                input.parentNode.appendChild(errorDiv);
            }
            errorDiv.innerHTML = '<i class="fas fa-exclamation-triangle me-1"></i>' + message;
        }
        
        function hideValidationError(input, errorId) {
            const errorDiv = document.getElementById(errorId);
            if (errorDiv) {
                errorDiv.remove();
            }
        }

     </script>
     <style>
         .preview-container:hover .preview-overlay {
             opacity: 1 !important;
         }
         
         .preview-image {
             transition: transform 0.3s ease;
         }
         
         .preview-container:hover .preview-image {
             transform: scale(1.02);
         }
     </style>
} 